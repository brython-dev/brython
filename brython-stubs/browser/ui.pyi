from . import console as console, document as document, html as html, window as window
from _typeshed import Incomplete

class UIError(Exception): ...

class Border:
    width: Incomplete
    style: Incomplete
    color: Incomplete
    radius: Incomplete
    def __init__(self, width: int = ..., style: str = ..., color: str = ..., radius: Incomplete | None = ...) -> None: ...

class Font:
    family: Incomplete
    size: Incomplete
    weight: Incomplete
    style: Incomplete
    def __init__(self, family: str = ..., size: Incomplete | None = ..., weight: str = ..., style: str = ...) -> None: ...

class _Directions:
    left: Incomplete
    top: Incomplete
    right: Incomplete
    bottom: Incomplete
    def __init__(self, *args, **kw) -> None: ...

class _Coords:
    left: Incomplete
    top: Incomplete
    width: Incomplete
    height: Incomplete
    def __init__(self, left, top, width, height) -> None: ...

class Padding(_Directions): ...
class Mouse: ...

mouse: Incomplete

class Rows:
    widget: Incomplete
    def __init__(self, widget): ...

class Widget:
    def __init_subclass__(cls) -> None: ...
    def add(self, widget, row: str = ..., column: Incomplete | None = ..., **kw) -> None: ...
    def add_row(self, widgets, row: str = ..., column_start: int = ..., **kw) -> None: ...
    def add_from_table(self, table, **kw) -> None: ...
    def apply_default_style(self) -> None: ...
    menu: Incomplete
    def config(self, **kw): ...
    def coords(self): ...
    row: Incomplete
    column: Incomplete
    cell: Incomplete
    def grid(self, column: Incomplete | None = ..., columnspan: int = ..., row: Incomplete | None = ..., rowspan: int = ..., align: str = ..., **options): ...
    @property
    def rows(self): ...
    def sort_by_row(self, *columns, has_title: bool = ...): ...

borderColor: str
backgroundColor: str
color: str

class Frame(html.DIV, Widget):
    def __init__(self, *args, **options) -> None: ...

class Bar(Frame):
    def __init__(self, **options) -> None: ...

class Box(html.DIV, Widget):
    default_config: Incomplete
    title_bar: Incomplete
    panel: Incomplete
    is_moving: bool
    def __init__(self, container=..., title: str = ..., titlebar: bool = ..., **options) -> None: ...
    def add(self, widget, **kw) -> None: ...
    def add_menu(self, menu) -> None: ...
    def close(self, *args) -> None: ...
    def keys(self): ...
    def title(self, text) -> None: ...

class _Wrapper:
    element: Incomplete
    def __init__(self, element) -> None: ...
    def config(self, **options) -> None: ...

class Checkbuttons(Frame):
    COUNTER: int
    name: Incomplete
    def __init__(self, **options) -> None: ...
    def add_option(self, label, value: Incomplete | None = ..., checked: bool = ...) -> None: ...

class Button(html.BUTTON, Widget):
    def __init__(self, *args, **options) -> None: ...

class Entry(html.INPUT, Widget):
    def __init__(self, *args, **options) -> None: ...

class Image(html.IMG, Widget):
    def __init__(self, src, **options) -> None: ...

class Label(html.DIV, Widget):
    default_style: Incomplete
    def __init__(self, value, *args, **options) -> None: ...

class Link(html.A, Widget):
    def __init__(self, text, href, **options) -> None: ...

class Listbox(Frame):
    size: Incomplete
    multiple: Incomplete
    def __init__(self, **options) -> None: ...
    def add_option(self, name) -> None: ...
    def enter_option(self, widget) -> None: ...
    def leave_option(self, widget) -> None: ...
    def select_option(self, widget) -> None: ...
    def select(self, widget) -> None: ...
    def unselect(self, widget) -> None: ...

class Menu(Frame):
    default_config: Incomplete
    toplevel_options: Incomplete
    submenu_options: Incomplete
    master: Incomplete
    def __init__(self, master, label: Incomplete | None = ..., **options) -> None: ...
    def add_option(self, label, command: Incomplete | None = ...) -> None: ...
    def add_submenu(self, label, submenu: Incomplete | None = ...) -> None: ...
    def enter(self, widget) -> None: ...
    def leave(self, widget) -> None: ...
    def submenu(self, widget) -> None: ...

class Radiobuttons(Frame):
    COUNTER: int
    name: str
    def __init__(self, **options) -> None: ...
    def add_option(self, label, value: Incomplete | None = ..., checked: bool = ...) -> None: ...

class Slider(Frame):
    default_config: Incomplete
    bar: Incomplete
    slider: Incomplete
    ratio: Incomplete
    moving: bool
    def __init__(self, ratio: int = ..., width: int = ..., height: int = ..., **options) -> None: ...
    min_x: Incomplete
    max_x: Incomplete
    interval: Incomplete
    def grid(self, **kw) -> None: ...
    x0: Incomplete
    mouse0: Incomplete
    def grab_slider(self, event) -> None: ...
    def move_slider(self, event): ...
    def release_slider(self, event) -> None: ...

class Text(html.DIV, Widget):
    default_style: Incomplete
    def __init__(self, *args, **options) -> None: ...

class TitleBar(html.DIV, Widget):
    default_config: Incomplete
    close_button: Incomplete
    def __init__(self, title: str = ..., *args, **options) -> None: ...
