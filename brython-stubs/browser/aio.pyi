from _aio import *
from _typeshed import Incomplete
from browser import window as window

async def gather(*coros, rate: int = ...): ...

class QueueEmpty(Exception): ...
class QueueFull(Exception): ...

class Queue:
    maxsize: Incomplete
    data: Incomplete
    readers: Incomplete
    writers: Incomplete
    joiners: Incomplete
    tasks: int
    def __init__(self, maxsize: int = ...) -> None: ...
    def qsize(self): ...
    def empty(self): ...
    def full(self): ...
    async def get(self): ...
    def get_nowait(self): ...
    async def put(self, item) -> None: ...
    def put_nowait(self, item) -> None: ...
    async def join(self) -> None: ...
    def task_done(self) -> None: ...
